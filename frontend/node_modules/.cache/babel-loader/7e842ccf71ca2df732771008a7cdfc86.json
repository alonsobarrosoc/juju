{"ast":null,"code":"import { API } from '../config'; //USER\n\nexport const signin = user => {\n  return fetch(`${API}/auth/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      \"content-Type\": 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const signup = user => {\n  return fetch(`${API}/auth/signup`, {\n    method: \"POST\",\n    headers: {\n      Accept: 'application/json',\n      \"Content-Type\": 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n    return err;\n  });\n};\nexport const signout = next => {\n  if (typeof window !== 'undefined') {\n    localStorage.removeItem('jwt');\n    next();\n    return fetch(`${API}/auth/signout`, {\n      method: 'GET'\n    }).then(response => {\n      console.log('signout', response);\n    }).catch(err => console.log(err));\n  }\n};\nexport const isAuthenticated = () => {\n  if (typeof window == 'undefined') {\n    return false;\n  }\n\n  if (localStorage.getItem('jwt')) {\n    return JSON.parse(localStorage.getItem('jwt'));\n  } else {\n    return false;\n  }\n};\nexport const authenticate = (data, next) => {\n  if (typeof window !== 'undefined') {\n    localStorage.setItem('jwt', JSON.stringify(data));\n    next();\n  }\n}; //RECETA --------------------------------\n\nexport const nuevaReceta = (userId, token, receta) => {\n  return fetch(`${API}/receta/addreceta/${userId}`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      Authorization: `Bearer ${token}`\n    },\n    body: receta\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n    return err;\n  });\n}; // 'Content-Type': 'application/json',","map":{"version":3,"sources":["D:/React/juju/frontend/src/core/apiCore.js"],"names":["API","signin","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","err","console","log","signup","signout","next","window","localStorage","removeItem","isAuthenticated","getItem","parse","authenticate","data","setItem","nuevaReceta","userId","token","receta","Authorization"],"mappings":"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","sourcesContent":["import { API } from '../config';\r\n\r\n\r\n//USER\r\nexport const signin = user => {\r\n    return fetch(`${API}/auth/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"content-Type\": 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json();\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport const signup = user => {\r\n    return fetch(`${API}/auth/signup`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept: 'application/json',\r\n            \"Content-Type\": 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            return err;\r\n        })\r\n}\r\n\r\nexport const signout = (next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.removeItem('jwt');\r\n        next();\r\n        return fetch(`${API}/auth/signout`, {\r\n            method: 'GET'\r\n        })\r\n            .then(response => {\r\n                console.log('signout', response);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n}\r\nexport const isAuthenticated = () => {\r\n    if (typeof window == 'undefined') {\r\n        return false;\r\n    }\r\n    if (localStorage.getItem('jwt')) {\r\n        return JSON.parse(localStorage.getItem('jwt'));\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport const authenticate = (data, next) => {\r\n    if (typeof window !== 'undefined') {\r\n        localStorage.setItem('jwt', JSON.stringify(data));\r\n        next();\r\n    }\r\n}\r\n\r\n\r\n//RECETA --------------------------------\r\nexport const nuevaReceta = (userId, token, receta) => {\r\n    return fetch(`${API}/receta/addreceta/${userId}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            Accept: 'application/json',\r\n\r\n            Authorization: `Bearer ${token}`\r\n        },\r\n        body: receta\r\n    })\r\n        .then(response => {\r\n            return response.json()\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            return (err);\r\n        })\r\n}// 'Content-Type': 'application/json',"]},"metadata":{},"sourceType":"module"}