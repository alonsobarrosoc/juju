[{"D:\\React\\juju\\frontend\\src\\index.js":"1","D:\\React\\juju\\frontend\\src\\App.js":"2","D:\\React\\juju\\frontend\\src\\Routes.js":"3","D:\\React\\juju\\frontend\\src\\pages\\about.js":"4","D:\\React\\juju\\frontend\\src\\pages\\Home.js":"5","D:\\React\\juju\\frontend\\src\\pages\\shop.js":"6","D:\\React\\juju\\frontend\\src\\pages\\Dashboard.js":"7","D:\\React\\juju\\frontend\\src\\pages\\Signin.js":"8","D:\\React\\juju\\frontend\\src\\pages\\AddProducto.js":"9","D:\\React\\juju\\frontend\\src\\pages\\RecetasAdmin.js":"10","D:\\React\\juju\\frontend\\src\\pages\\AddReceta.js":"11","D:\\React\\juju\\frontend\\src\\pages\\ProductosAdmin.js":"12","D:\\React\\juju\\frontend\\src\\pages\\Carrito.js":"13","D:\\React\\juju\\frontend\\src\\pages\\Receta.js":"14","D:\\React\\juju\\frontend\\src\\pages\\Signup.js":"15","D:\\React\\juju\\frontend\\src\\pages\\VerReceta.js":"16","D:\\React\\juju\\frontend\\src\\pages\\VerProducto.js":"17","D:\\React\\juju\\frontend\\src\\config.js":"18","D:\\React\\juju\\frontend\\src\\components\\Navigation.js":"19","D:\\React\\juju\\frontend\\src\\components\\Footer.js":"20","D:\\React\\juju\\frontend\\src\\components\\Dropdown.js":"21","D:\\React\\juju\\frontend\\src\\components\\Content.js":"22","D:\\React\\juju\\frontend\\src\\components\\Hero.js":"23","D:\\React\\juju\\frontend\\src\\components\\Cards\\RecetaCardAdmin.js":"24","D:\\React\\juju\\frontend\\src\\components\\Cards\\ProductoCard.js":"25","D:\\React\\juju\\frontend\\src\\components\\Cards\\RecetaCard.js":"26","D:\\React\\juju\\frontend\\src\\core\\apiCore.js":"27","D:\\React\\juju\\frontend\\src\\components\\Cards\\CarritoCard.js":"28"},{"size":212,"mtime":1625158940000,"results":"29","hashOfConfig":"30"},{"size":115,"mtime":1625160466000,"results":"31","hashOfConfig":"30"},{"size":2073,"mtime":1626205840000,"results":"32","hashOfConfig":"30"},{"size":785,"mtime":1626272562000,"results":"33","hashOfConfig":"30"},{"size":517,"mtime":1625167650000,"results":"34","hashOfConfig":"30"},{"size":1282,"mtime":1625430042000,"results":"35","hashOfConfig":"30"},{"size":1613,"mtime":1626205112000,"results":"36","hashOfConfig":"30"},{"size":4372,"mtime":1625268134000,"results":"37","hashOfConfig":"30"},{"size":4277,"mtime":1625418894000,"results":"38","hashOfConfig":"30"},{"size":1408,"mtime":1626208816000,"results":"39","hashOfConfig":"30"},{"size":4969,"mtime":1625271178000,"results":"40","hashOfConfig":"30"},{"size":137,"mtime":1626205270000,"results":"41","hashOfConfig":"30"},{"size":3876,"mtime":1638509543841,"results":"42","hashOfConfig":"30"},{"size":1141,"mtime":1625274574000,"results":"43","hashOfConfig":"30"},{"size":4370,"mtime":1625267440000,"results":"44","hashOfConfig":"30"},{"size":4138,"mtime":1638507814733,"results":"45","hashOfConfig":"30"},{"size":6539,"mtime":1626209788000,"results":"46","hashOfConfig":"30"},{"size":49,"mtime":1625168602000,"results":"47","hashOfConfig":"30"},{"size":4185,"mtime":1626208172000,"results":"48","hashOfConfig":"30"},{"size":261,"mtime":1625278244000,"results":"49","hashOfConfig":"30"},{"size":569,"mtime":1625159576000,"results":"50","hashOfConfig":"30"},{"size":2117,"mtime":1638494345264,"results":"51","hashOfConfig":"30"},{"size":1302,"mtime":1626209558000,"results":"52","hashOfConfig":"30"},{"size":4968,"mtime":1626207836000,"results":"53","hashOfConfig":"30"},{"size":4323,"mtime":1626209938000,"results":"54","hashOfConfig":"30"},{"size":3699,"mtime":1638490858526,"results":"55","hashOfConfig":"30"},{"size":6047,"mtime":1626207534000,"results":"56","hashOfConfig":"30"},{"size":2875,"mtime":1626118524000,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"1383jtb",{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"61"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"61"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"61"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"61"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"61"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"61"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"61"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"61"},"D:\\React\\juju\\frontend\\src\\index.js",["130"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './Routes';\nimport App from './App'\n\nReactDOM.render(\n    <Routes />\n\n    , document.getElementById('root')\n);",["131","132"],"D:\\React\\juju\\frontend\\src\\App.js",[],"D:\\React\\juju\\frontend\\src\\Routes.js",[],"D:\\React\\juju\\frontend\\src\\pages\\about.js",[],"D:\\React\\juju\\frontend\\src\\pages\\Home.js",["133","134","135"],"import React, { useState, useEffect } from 'react';\r\nimport Navigation from '../components/Navigation';\r\nimport '../index.css';\r\n\r\n\r\nimport Hero from '../components/Hero';\r\nimport Content from '../components/Content';\r\nimport Footer from '../components/Footer';\r\nimport Dropdown from '../components/Dropdown';\r\n\r\nconst Home = () => {\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <Hero />\r\n            <Content />\r\n            <Footer />\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","D:\\React\\juju\\frontend\\src\\pages\\shop.js",["136"],"import React, { useEffect, useState } from 'react'\r\nimport Navigation from '../components/Navigation';\r\n\r\nimport Footer from '../components/Footer';\r\nimport { getProductos } from '../core/apiCore';\r\nimport ProductoCard from '../components/Cards/ProductoCard';\r\n\r\nconst Shop = () => {\r\n    const [productos, setProductos] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadProductos = () => {\r\n        getProductos().then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProductos(data)\r\n                console.log(data);\r\n            }\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        loadProductos();\r\n    }, []);\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <div className=\"container my-12 mx-auto px-4 md:px-12\">\r\n                <div className=\"flex flex-wrap -mx-1 lg:-mx-4\">\r\n\r\n                    {productos.map((producto, i) => (\r\n                        <div key={i} className='mx-4 my-4'>\r\n                            <ProductoCard producto={producto} />\r\n                        </div>\r\n\r\n                    ))}\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Shop\r\n","D:\\React\\juju\\frontend\\src\\pages\\Dashboard.js",["137","138"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport Navigation from '../components/Navigation';\r\nimport { authenticate, isAuthenticated, signout } from '../core/apiCore';\r\n\r\nfunction Dashboard() {\r\n\r\n    const history = useHistory();\r\n\r\n    const { user } = isAuthenticated();\r\n\r\n    const init = () => {\r\n        if (!isAuthenticated() || user.role !== 1) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    useState(() => {\r\n        init();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <div className='grid md:grid-flow-col m-11'>\r\n                <div className=\"flex items-center bg-white\">\r\n                    <Link className='text-center items-center bg-black text-white p-4 rounded-full' to='/verproductosadmin'>Ver Producto</Link>\r\n                </div>\r\n                <div className=\"flex items-center bg-white\">\r\n                    <Link className='text-center items-center bg-black text-white p-4 rounded-full' to='/addproducto'>Agregar Producto</Link>\r\n                </div>\r\n                <div className=\"flex items-center bg-white\">\r\n                    <Link className='text-center items-center bg-black text-white p-4 rounded-full' to='/verrecetaadmin'>Ver Receta</Link>\r\n                </div>\r\n                <div className=\"flex items-center bg-white\">\r\n                    <Link className='text-center items-center bg-black text-white p-4 rounded-full' to='/addreceta'>Agregar Receta</Link>\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","D:\\React\\juju\\frontend\\src\\pages\\Signin.js",["139","140","141","142","143"],"import React, { useState } from 'react'\r\nimport { Redirect, useHistory } from 'react-router-dom';\r\n\r\n\r\nimport Navigation from '../components/Navigation'\r\nimport Footer from '../components/Footer'\r\nimport { authenticate, isAuthenticated, signin } from '../core/apiCore';\r\nimport logo from '../Recursos/SVG/jujunegro.svg'\r\n\r\n\r\nfunction Signin() {\r\n\r\n    let history = useHistory();\r\n    const [values, setValues] = useState({\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        loading: false,\r\n        redirectToReferrer: false\r\n    });\r\n\r\n    const { email, password, loading, error, redirectToReferrer } = values;\r\n\r\n    const { user } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: false, loading: true })\r\n        signin({ email, password })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error, loading: false })\r\n                } else {\r\n                    authenticate(\r\n                        data, () => {\r\n                            setValues({\r\n                                ...values,\r\n                                redirectToReferrer: true\r\n                            })\r\n                        }\r\n                    )\r\n                    console.log(data.user.role);\r\n                    if (data.user.role === 0) {\r\n                        history.push('/')\r\n                    }\r\n                    if (data.user.role === 1) {\r\n                        history.push('/dashboard')\r\n                    }\r\n                }\r\n\r\n            })\r\n        // console.log(user.role);\r\n\r\n        // if (user.role === 0) {\r\n        //     history.push('/')\r\n        // }\r\n\r\n    }\r\n\r\n\r\n    const signinForm = () => (\r\n        <form action=\"\" className=\"space-y-6\">\r\n\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('email')}\r\n                    value={email}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Contraseña</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('password')}\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n                {/* <div className=\"flex items-center\">\r\n                    <input type=\"checkbox\" className=\"h-4 w-4 text-blue-300 rounded\" />\r\n                    <label htmlFor=\"\" className=\"ml-2 text-gray-600\">Remember me</label>\r\n                </div>\r\n                <div>\r\n                    <a href=\"\" className=\"font-medium text-sm text-blue-500\">Olvidaste tu contraseña?</a>\r\n                </div> */}\r\n            </div>\r\n            <div>\r\n                <button onClick={clickSubmit} to='/' className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-md text-white text-sm\">Iniciar Sesión</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <div className=\"grid md:grid-flow-col\">\r\n                <div className=\"text-center font-medium text-xl\">\r\n\r\n                    <img\r\n                        src={logo}\r\n                        width=\"150\"\r\n                        height=\"150\"\r\n                        className=\"d-inline-block align-top ms-4\"\r\n                        alt=\"JuJu Coffee\"\r\n                    />\r\n                    <h1 className='text-3xl font-bold text-gray-900 mt-2 text-center'>Iniciar Sesión</h1>\r\n\r\n\r\n                </div>\r\n                <div className=\"max-w-md w-full mx-auto mt-4 bg-white p-8 border-gray-300 items-center\">\r\n                    {signinForm()}\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Signin;\r\n","D:\\React\\juju\\frontend\\src\\pages\\AddProducto.js",["144","145","146","147","148","149"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport Navigation from '../components/Navigation'\r\nimport Footer from '../components/Footer';\r\n\r\nimport { isAuthenticated, nuevaReceta, nuevoProducto } from '../core/apiCore';\r\n\r\n\r\n\r\nfunction AddProducto() {\r\n\r\n    const history = useHistory;\r\n\r\n\r\n\r\n    const init = () => {\r\n        if (!isAuthenticated() || user.role !== 1) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    const [values, setValues] = useState({\r\n        nombre: '',\r\n        descripcion: '',\r\n        photo: '',\r\n        precio: '',\r\n\r\n        loading: false,\r\n        error: '',\r\n        productoCreado: '',\r\n        formData: '',\r\n    })\r\n    const {\r\n        nombre,\r\n        descripcion,\r\n        photo,\r\n        precio,\r\n\r\n        loading,\r\n        error,\r\n        productoCreado,\r\n        formData,\r\n    } = values;\r\n\r\n    const { user, token } = isAuthenticated();\r\n    useEffect(() => {\r\n        setValues({ formData: new FormData() })\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({ ...values, error: '', loading: true })\r\n        nuevoProducto(user._id, token, formData)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error })\r\n                } else {\r\n                    setValues({\r\n                        nombre: '',\r\n                        descripcion: '',\r\n                        photo: '',\r\n                        precio: '',\r\n                        loading: false,\r\n                        productoCreado: data.nombre\r\n\r\n                    })\r\n                }\r\n            })\r\n    }\r\n\r\n    const addProductoForm = () => (\r\n        <form action=\"\" className=\"space-y-6\">\r\n\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Nombre</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('nombre')}\r\n                    value={nombre}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Precio</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('precio')}\r\n                    value={precio}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Descripcion</label>\r\n                <textarea\r\n                    className='w-full p-2 border border-gray-300 rounded mt-1'\r\n                    cols='40'\r\n                    rows='5'\r\n                    type=\"text\"\r\n                    onChange={handleChange('descripcion')}\r\n                    value={descripcion}\r\n                ></textarea>\r\n                <div className='form-group'>\r\n                    <label className='w-full p-2 border bg-gray-300 rounded mt-1'>\r\n                        <input\r\n                            onChange={handleChange('photo')}\r\n                            type='file'\r\n                            name='photo'\r\n                            accept='image/*'\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <button onClick={clickSubmit} className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-md text-white text-sm\">Iniciar Sesión</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <div className=\"max-w-md w-full mx-auto mt-4 bg-white p-8 border-gray-300 items-center\">\r\n                {addProductoForm()}\r\n            </div>\r\n            <Footer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddProducto\r\n","D:\\React\\juju\\frontend\\src\\pages\\RecetasAdmin.js",["150","151","152"],"import React, { useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom';\nimport RecetaCard from '../components/Cards/RecetaCard';\nimport RecetaCardAdmin from '../components/Cards/RecetaCardAdmin';\n\nimport Footer from '../components/Footer'\nimport Navigation from '../components/Navigation'\nimport { getRecetas, isAuthenticated } from '../core/apiCore';\n\nfunction RecetasAdmin() {\n    const [recetas, setRecetas] = useState([]);\n    const [error, setError] = useState(false);\n\n    const history = useHistory();\n\n    const { user } = isAuthenticated();\n\n    const init = () => {\n        if (!isAuthenticated() || user.role !== 1) {\n            history.push('/');\n        }\n    }\n\n    const loadRecetas = () => {\n        getRecetas().then(data => {\n            if (data.error) {\n                setError(data.error)\n            } else {\n                setRecetas(data)\n            }\n        })\n    }\n\n    useEffect(() => {\n        init();\n        loadRecetas();\n    }, [])\n    return (\n        <div>\n            <Navigation />\n            <div className=\"grid md:grid-flow-col m-11\">\n                {recetas.map((receta, i) => (\n                    <div key={i} className='w-96'>\n                        <RecetaCardAdmin receta={receta} />\n                    </div>\n                ))}\n\n            </div>\n\n            <Footer />\n\n        </div>\n    )\n}\n\nexport default RecetasAdmin\n","D:\\React\\juju\\frontend\\src\\pages\\AddReceta.js",["153","154","155","156","157"],"import React, { useEffect, useState } from 'react'\r\n\r\nimport Navigation from '../components/Navigation'\r\nimport Footer from '../components/Footer';\r\nimport { isAuthenticated, nuevaReceta } from '../core/apiCore';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nfunction AddReceta() {\r\n    const history = useHistory;\r\n\r\n    const init = () => {\r\n        if (!isAuthenticated() || user.role !== 1) {\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        ingredientes: '',\r\n        pasos: '',\r\n        video: '',\r\n        photo: '',\r\n        loading: false,\r\n        error: '',\r\n        recetaCreada: '',\r\n        formData: ''\r\n    })\r\n    const {\r\n        name,\r\n        ingredientes,\r\n        pasos,\r\n        video,\r\n        photo,\r\n        loading,\r\n        error,\r\n        recetaCreada,\r\n        formData\r\n    } = values;\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    useEffect(() => {\r\n        setValues({ ...values, formData: new FormData() })\r\n        init();\r\n    }, []);\r\n\r\n    const handleChange = name => event => {\r\n        const value = name === 'photo' ? event.target.files[0] : event.target.value\r\n        formData.set(name, value)\r\n        setValues({ ...values, [name]: value })\r\n    }\r\n\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault(); setValues({ ...values, error: '', loading: true })\r\n        nuevaReceta(user._id, token, formData)\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setValues({ ...values, error: data.error })\r\n                } else {\r\n                    setValues({\r\n                        ...values,\r\n                        name: '',\r\n                        ingredientes: '',\r\n                        pasos: '',\r\n                        video: '',\r\n                        photo: '',\r\n                        loading: false,\r\n                        recetaCreada: data.name\r\n                    })\r\n                }\r\n            })\r\n        console.log(user);\r\n\r\n    }\r\n\r\n\r\n    const addRecetaForm = () => (\r\n        <form action=\"\" className=\"space-y-6\">\r\n\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Nombre</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('name')}\r\n                    value={name}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Ingredientes</label>\r\n                <textarea\r\n                    className='w-full p-2 border border-gray-300 rounded mt-1'\r\n                    cols='40'\r\n                    rows='5'\r\n                    type=\"text\"\r\n                    onChange={handleChange('ingredientes')}\r\n                    value={ingredientes}\r\n                ></textarea>\r\n                {/* <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('ingredientes')}\r\n                    value={ingredientes}\r\n                /> */}\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Pasos</label>\r\n                <textarea\r\n                    className='w-full p-2 border border-gray-300 rounded mt-1'\r\n                    cols='40'\r\n                    rows='5'\r\n                    type=\"text\"\r\n                    onChange={handleChange('pasos')}\r\n                    value={pasos}\r\n                ></textarea>\r\n\r\n            </div>\r\n            <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Video</label>\r\n            <input\r\n                type=\"text\"\r\n                className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                onChange={handleChange('video')}\r\n                value={video}\r\n            />\r\n            <div className='form-group'>\r\n                <label className='w-full p-2 border bg-gray-300 rounded mt-1'>\r\n                    <input\r\n                        onChange={handleChange('photo')}\r\n                        type='file'\r\n                        name='photo'\r\n                        accept='image/*'\r\n                    />\r\n                </label>\r\n            </div>\r\n            <div>\r\n                <button onClick={clickSubmit} className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-md text-white text-sm\">Iniciar Sesión</button>\r\n            </div>\r\n        </form>\r\n    )\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <div className=\"max-w-md w-full mx-auto mt-4 bg-white p-8 border-gray-300 items-center\">\r\n                {addRecetaForm()}\r\n            </div>\r\n\r\n\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddReceta\r\n","D:\\React\\juju\\frontend\\src\\pages\\ProductosAdmin.js",[],"D:\\React\\juju\\frontend\\src\\pages\\Carrito.js",["158","159","160","161"],"D:\\React\\juju\\frontend\\src\\pages\\Receta.js",["162"],"import React, { useState, useEffect } from 'react'\r\n\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport RecetaCard from '../components/Cards/RecetaCard';\r\nimport { getRecetas } from '../core/apiCore';\r\n\r\nfunction Receta() {\r\n\r\n    const [recetas, setRecetas] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadRecetas = () => {\r\n        getRecetas().then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setRecetas(data);\r\n                console.log(data);\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRecetas();\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n\r\n            <div className=\"grid md:grid-flow-col flex\">\r\n                {recetas.map((receta, i) => (\r\n                    <div key={i} className='mx-4 my-4'>\r\n                        <RecetaCard receta={receta} />\r\n                    </div>\r\n\r\n                ))}\r\n\r\n            </div>\r\n\r\n            <Footer />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Receta\r\n","D:\\React\\juju\\frontend\\src\\pages\\Signup.js",["163","164","165"],"import React, { useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport Footer from '../components/Footer'\r\nimport Navigation from '../components/Navigation'\r\nimport { signup } from '../core/apiCore'\r\nimport logo from '../Recursos/SVG/jujunegro.svg'\r\n\r\n\r\nfunction Signup() {\r\n\r\n    let history = useHistory();\r\n\r\n    const [values, setValues] = useState({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        error: '',\r\n        success: false\r\n    })\r\n    const {\r\n        name,\r\n        email,\r\n        password,\r\n        error,\r\n        success\r\n    } = values\r\n\r\n    const handleChange = name => event => {\r\n        setValues({ ...values, error: false, [name]: event.target.value })\r\n    }\r\n    const clickSubmit = (event) => {\r\n        event.preventDefault()\r\n        setValues({ ...values, error: false })\r\n        signup({ name, email, password }).then(data => {\r\n            if (data.error) {\r\n                setValues({ ...values, error: data.error, success: false })\r\n            } else {\r\n                setValues({\r\n                    ...values,\r\n                    name: '',\r\n                    email: '',\r\n                    password: '',\r\n                    error: '',\r\n                    success: true\r\n                })\r\n            }\r\n        })\r\n        history.push('/signin');\r\n    }\r\n\r\n    const signupForm = () => (\r\n        <form action=\"\" className=\"space-y-6\">\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Nombre</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('name')}\r\n                    value={name}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Email</label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('email')}\r\n                    value={email}\r\n                />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"\" className=\"text-sm font-bold text-gray-600 block\">Contraseña</label>\r\n                <input\r\n                    type=\"password\"\r\n                    className=\"w-full p-2 border border-gray-300 rounded mt-1\"\r\n                    onChange={handleChange('password')}\r\n                    value={password}\r\n                />\r\n            </div>\r\n            <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center\">\r\n                    <input type=\"checkbox\" className=\"h-4 w-4 text-blue-300 rounded\" />\r\n                    <label htmlFor=\"\" className=\"ml-2 text-gray-600\">Remember me</label>\r\n                </div>\r\n                <div>\r\n                    <a href=\"\" className=\"font-medium text-sm text-blue-500\">Olvidaste tu contraseña?</a>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button onClick={clickSubmit} to='/' className=\"w-full py-2 px-4 bg-blue-600 hover:bg-blue-700 rounded-md text-white text-sm\">Crear Cuenta</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n            <div className=\"min-h-screen bg-gray-50 flex flex-col justify-center\">\r\n                <div className=\"max-w-md w-full mx-auto\">\r\n                    <div className=\"text-center font-medium text-xl\">\r\n\r\n                        <img\r\n                            src={logo}\r\n                            width=\"150\"\r\n                            height=\"150\"\r\n                            className=\"d-inline-block align-top ms-4\"\r\n                            alt=\"JuJu Coffee\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"text-3xl font-bold text-gray-900 mt-2 text-center\">\r\n                        Crear una Cuenta\r\n                    </div>\r\n                </div>\r\n                <div className=\"max-w-md w-full mx-auto mt-4 bg-white p-8 border-gray-300 items-center\">\r\n                    {signupForm()}\r\n                </div>\r\n            </div>\r\n            <Footer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","D:\\React\\juju\\frontend\\src\\pages\\VerReceta.js",["166","167"],"D:\\React\\juju\\frontend\\src\\pages\\VerProducto.js",["168","169"],"import React, { useEffect, useState } from 'react'\r\nimport Navigation from '../components/Navigation';\r\nimport Footer from '../components/Footer';\r\nimport { agregarACarrito, agregarACarritoPost, isAuthenticated, readProducto } from '../core/apiCore';\r\nimport { API } from '../config';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction VerProducto(props) {\r\n\r\n    const [producto, setProducto] = useState({});\r\n    const [cantidad, setCantidad] = useState(1);\r\n    const [error, setError] = useState(false);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const handleChange = name => event => {\r\n        setCantidad(event.target.value)\r\n    }\r\n\r\n\r\n    const loadUnProducto = productoId => {\r\n        readProducto(productoId).then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProducto(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const productoId = props.match.params.productoId;\r\n        loadUnProducto(productoId);\r\n    }, [props]);\r\n\r\n    // const agregarACarritoClick = () => {\r\n    //     // setValues({ ...values, error: false, loading: true })\r\n\r\n\r\n    //     agregarACarrito(user._id, token, producto._id)\r\n    //         .then(data => {\r\n    //             if (data.error) {\r\n    //                 setError(data.error)\r\n    //             } else {\r\n    //                 // setValues({\r\n    //                 //     ...values,\r\n    //                 //     cantidad: 0\r\n    //                 // })\r\n    //                 console.log(data);\r\n    //             }\r\n    //         })\r\n\r\n\r\n    // }\r\n    const agregarACarritoClickPost = () => {\r\n        // setValues({ ...values, error: false, loading: true })\r\n\r\n        agregarACarritoPost(user._id, token, producto._id, { cantidad })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(data.error)\r\n                } else {\r\n                    // setValues({\r\n                    //     ...values,\r\n                    //     cantidad: 0\r\n                    // })\r\n                    console.log(data);\r\n                }\r\n            })\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Navigation />\r\n            <div className=\"grid xl:grid-flow-col flex container m-5\">\r\n                <div className='bg-black rounded-2xl m-3'>\r\n\r\n                    <h1 className=\"m-4 lg:text-9xl md:text-8xl sm:text-7xl text-5xl font-black mb-14 text-white uppercase\">{producto.nombre}</h1>\r\n                    <div className=\"bg-white rounded-2xl m-4 p-1\">\r\n                        <h1 className=\"m-4 lg:text-5xl md:text-4xl sm:text-3xl text-3xl font-black mb-14 text-black uppercase\">Descripción</h1>\r\n                        <h1 className=\"m-4 lg:text-3xl md:text-2xl sm:text-1xl text-2xl font-bold mb-14 text-bold \">{producto.descripcion}</h1>\r\n\r\n                    </div>\r\n                    {isAuthenticated() &&\r\n                        <div className=\"flex container\">\r\n\r\n                            <form className='flex container'>\r\n\r\n\r\n                                <button className=\"m-4 py-2 px-6 text-black bg-yellow-600 rounded-full text-2xl flex items-center hover:bg-black hover:text-white transition duration-300 ease-in-out flex items-center\"\r\n                                    onClick={agregarACarritoClickPost}>\r\n                                    Agregar a carrito\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-10 w-10\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                                    </svg>\r\n                                </button>\r\n                                <h1 className='m-4 lg:text-3xl md:text-2xl sm:text-1xl text-2xl font-bold mb-14 text-bold text-white items-center'>Cantidad:</h1>\r\n                                <select\r\n\r\n                                    onChange={handleChange('cantidad')}\r\n                                    type='text'\r\n                                    className='m-4 w-10 rounded-xl'\r\n                                >\r\n                                    <option>1</option>\r\n                                    <option>2</option>\r\n                                    <option>3</option>\r\n                                    <option>4</option>\r\n                                    <option>5</option>\r\n                                    <option>6</option>\r\n                                    <option>7</option>\r\n                                    <option>8</option>\r\n                                    <option>9</option>\r\n                                    <option>10</option>\r\n                                    <option>11</option>\r\n                                    <option>12</option>\r\n                                    <option>13</option>\r\n                                    <option>14</option>\r\n                                    <option>15</option>\r\n                                    <option>16</option>\r\n                                    <option>17</option>\r\n                                    <option>18</option>\r\n                                    <option>19</option>\r\n                                    <option>20</option>\r\n                                </select>\r\n                            </form>\r\n\r\n                        </div>\r\n\r\n                    }\r\n                    {!isAuthenticated() &&\r\n                        <Link className=\"m-4 py-2 px-6 text-black bg-gradient-to-r from-green-400 to-blue-500 rounded-full text-2xl flex items-center hover:text-white transition duration-300 ease-in-out flex items-center\"\r\n                            to='/signin'>\r\n                            Iniciar Sesión\r\n\r\n                        </Link>\r\n                    }\r\n\r\n                </div>\r\n                <img\r\n                    // src={`${API}/receta/photo/${receta._id}`}\r\n                    src={`${API}/producto/photo/${props.match.params.productoId}`}\r\n                    alt={producto.nombre}\r\n                    className=\"m-3 img-cont rounded-lg\"\r\n                // style={{ maxHeight: \"600px\", maxWidth: \"300px\" }} \r\n                />\r\n\r\n            </div>\r\n\r\n            <Footer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerProducto\r\n","D:\\React\\juju\\frontend\\src\\config.js",[],"D:\\React\\juju\\frontend\\src\\components\\Navigation.js",["170"],"import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { isAuthenticated, signout } from '../core/apiCore';\r\n\r\nimport logo from '../Recursos/SVG/jujunegro.svg'\r\nimport Dropdown from './Dropdown';\r\n\r\n\r\nconst isActive = (history, path) => {\r\n    if (history.location.pathname === path) {\r\n        return { color: '#ff9900' }\r\n    } else {\r\n        return { color: '#ffffff' }\r\n    }\r\n}\r\nconst Navigation = ({ history }) => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n\r\n    const { user } = isAuthenticated();\r\n    useEffect(() => {\r\n        const hideMenu = () => {\r\n            if (window.innerWidth > 768 && isOpen) {\r\n                setIsOpen(false);\r\n                console.log('resize');\r\n            }\r\n        }\r\n        window.addEventListener('resize', hideMenu);\r\n        return () => {\r\n            window.removeEventListener('resize', hideMenu);\r\n        };\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <nav className='flex justify-between items-center h-16 bg-white text-black relative shadow-sm font-sans'\r\n                role='navigation'>\r\n                <Link to='/' className='pl-8'>\r\n\r\n                    <img\r\n                        src={logo}\r\n                        width=\"50\"\r\n                        height=\"50\"\r\n                        className=\"d-inline-block align-top ms-4\"\r\n                        alt=\"JuJu Coffee\"\r\n                    />\r\n                </Link>\r\n                <div className=\"px-4 cursor-pointer md:hidden\"\r\n                    onClick={toggle}\r\n                >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                    </svg>\r\n                </div>\r\n                <div className=\"pr-8 md:block hidden\">\r\n                    <Link className=\"p-4\" to='/'>Inicio</Link>\r\n                    <Link className=\"p-4\" to='/shop'>Tienda</Link>\r\n                    <Link className=\"p-4\" to='/about'>¿Quiénes somos?</Link>\r\n                    <Link className=\"p-4\" to='/recetas'>Recetas</Link>\r\n                    {!isAuthenticated() && (\r\n                        <>\r\n                            <Link className=\"text-black bg-white rounded-full border-2 p-2 m-2\"\r\n                                to='/signin'>\r\n                                Iniciar Sesión\r\n                            </Link>\r\n                            <Link className=\"text-white bg-gray-600 rounded-full p-2 border-2\"\r\n                                to='/signup'>\r\n                                Crear Cuenta\r\n                            </Link>\r\n                        </>\r\n                    )}\r\n                    {isAuthenticated() && (\r\n                        <>\r\n                            <Link className='d-inline-block align-top mx-4' to={`/carrito/${user._id}`}>\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z\" />\r\n                                </svg>\r\n                            </Link>\r\n                            <Link className=\"text-white bg-red-600 rounded-full p-2 mx-4\"\r\n                                to='/'\r\n                                onClick={() =>\r\n                                    signout(() => {\r\n                                        history.push(\"/\");\r\n                                    })}\r\n                            >Salir de Sesión</Link>\r\n\r\n\r\n\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </nav>\r\n            <Dropdown isOpen={isOpen} toggle={toggle} />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navigation);","D:\\React\\juju\\frontend\\src\\components\\Footer.js",[],"D:\\React\\juju\\frontend\\src\\components\\Dropdown.js",[],"D:\\React\\juju\\frontend\\src\\components\\Content.js",["171","172","173","174","175","176"],"D:\\React\\juju\\frontend\\src\\components\\Hero.js",[],"D:\\React\\juju\\frontend\\src\\components\\Cards\\RecetaCardAdmin.js",["177","178","179"],"import React, { useState, useEffect } from 'react'\nimport { API } from '../../config'\nimport { addRecetaFav, isAuthenticated, removeRecetaFav } from '../../core/apiCore'\nimport { Link } from 'react-router-dom';\nfunction RecetaCardAdmin({ receta }) {\n    const [error, setError] = useState(false);\n    const { user, token } = isAuthenticated();\n\n    const addFav = () => {\n        addRecetaFav(user._id, token, receta._id).then(data => {\n            if (data.error) {\n                setError(data.error)\n            } else {\n                window.location.reload()\n            }\n        })\n    }\n\n    const removeFav = () => {\n        removeRecetaFav(user._id, token, receta._id).then(data => {\n            if (data.error) {\n                setError(data.error)\n            } else {\n                window.location.reload()\n            }\n        })\n    }\n\n\n\n\n    return (\n\n\n        <>\n            <div className=\"w-full p-2\">\n                <div className=\"bg-white shadow-lg hover:shadow-xl rounded-lg \">\n                    <div className=\"bg-gray-400 h-64 rounded-t-lg p-4 bg-no-repeat bg-center bg-cover\" style={{ backgroundImage: `url(${API}/receta/photo/${receta._id})` }}>\n                        <div className=\"text-right\">\n                            {/* <button className=\"text-gray-300 hover:text-pink-500 p-2 rounded-full\" style={{ background: 'rgba(0,0,0,0.3)' }}>\n                                <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\n                                    <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z\" />\n                                </svg>\n                            </button> */}\n                        </div>\n                    </div>\n                    <div className=\"flex justify-between items-start px-2 pt-2\">\n                        <div className=\"p-2 flex-grow\">\n                            <h1 className=\"font-medium text-xl font-poppins\">{receta.name}</h1>\n                        </div>\n                        <div className=\"p-2 text-right\">\n                            {/* <div className=\"text-xs text-gray-500 line-through font-poppins\">$50</div> */}\n                        </div>\n                    </div>\n                    <div className=\"flex justify-center items-center px-2 pb-2\">\n                        <div className=\"w-1/2 p-2\">\n\n\n                            {/* <button className=\"block w-full bg-white hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium\">\n                                Ver receta\n                            </button> */}\n                            {receta.fav && (\n                                <button\n                                    className='block w-full bg-white text-center hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium'\n                                    onClick={removeFav}\n                                >\n                                    Eliminar de página de inicio\n\n                                </button>\n                            )}\n                            {!receta.fav && (\n                                <button\n                                    className='block w-full bg-white text-center hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium'\n                                    onClick={addFav}\n                                >\n                                    Agregar a página de inicio\n                                </button>\n                            )}\n                        </div>\n\n                        <div className=\"w-1/2 p-2\">\n                            {/* {isAuthenticated() &&\n                                <button\n                                    // onClick={clickAgregaCarrito}\n                                    className=\"block w-full bg-white hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium\">\n                                    Agregue a carrito\n                                </button>\n                            }\n                            {!isAuthenticated() &&\n                                <Link to='/signin'>\n\n                                    <button\n                                        className=\"block w-full bg-white hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium\">\n                                        Inicie sesión\n                                    </button>\n                                </Link>\n\n                            } */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default RecetaCardAdmin;","D:\\React\\juju\\frontend\\src\\components\\Cards\\ProductoCard.js",["180","181"],"import React, { useState } from 'react'\r\nimport { API } from '../../config'\r\nimport { agregarACarritoPost, isAuthenticated } from '../../core/apiCore'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ProductoCard({ producto }) {\r\n\r\n    const { user, token } = isAuthenticated();\r\n    const [cantidad, setCantidad] = useState(1);\r\n    const [error, setError] = useState(false);\r\n\r\n    const clickAgregaCarrito = () => {\r\n        agregarACarritoPost(user._id, token, producto._id, { cantidad })\r\n            .then(data => {\r\n                if (data.error) {\r\n                    setError(data.error)\r\n                }\r\n            })\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <div className=\"w-full p-2\">\r\n                <div className=\"bg-white shadow-lg hover:shadow-xl rounded-lg \">\r\n                    <div className=\"bg-gray-400 h-64 rounded-t-lg p-4 bg-no-repeat bg-center bg-cover\" style={{ backgroundImage: `url(${API}/producto/photo/${producto._id})` }}>\r\n                        <div className=\"text-right\">\r\n                            {/* <button className=\"text-gray-300 hover:text-pink-500 p-2 rounded-full\" style={{ background: 'rgba(0,0,0,0.3)' }}>\r\n                                <svg className=\"w-6 h-6\" viewBox=\"0 0 24 24\">\r\n                                    <path fill=\"currentColor\" d=\"M12,21.35L10.55,20.03C5.4,15.36 2,12.27 2,8.5C2,5.41 4.42,3 7.5,3C9.24,3 10.91,3.81 12,5.08C13.09,3.81 14.76,3 16.5,3C19.58,3 22,5.41 22,8.5C22,12.27 18.6,15.36 13.45,20.03L12,21.35Z\" />\r\n                                </svg>\r\n                            </button> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex justify-between items-start px-2 pt-2\">\r\n                        <div className=\"p-2 flex-grow\">\r\n                            <h1 className=\"font-medium text-xl font-poppins\">{producto.nombre}</h1>\r\n                            <p className=\"text-gray-500 font-nunito\">{producto.descripcion}</p>\r\n                        </div>\r\n                        <div className=\"p-2 text-right\">\r\n                            <div className=\"text-teal-500 font-semibold text-lg font-poppins\">${producto.precio}</div>\r\n                            {/* <div className=\"text-xs text-gray-500 line-through font-poppins\">$50</div> */}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex justify-center items-center px-2 pb-2\">\r\n                        <div className=\"w-1/2 p-2\">\r\n\r\n                            <Link className='block w-full bg-white text-center hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium' to={`/verproducto/${producto._id}`}>\r\n                                Ver Más\r\n                            </Link>\r\n                            {/* <button className=\"block w-full bg-white hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium\">\r\n                                Ver Producto\r\n                            </button> */}\r\n                        </div>\r\n\r\n                        <div className=\"w-1/2 p-2\">\r\n                            {isAuthenticated() &&\r\n                                <button\r\n                                    onClick={clickAgregaCarrito}\r\n                                    className=\"block w-full bg-white hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium\">\r\n                                    Agregue a carrito\r\n                                </button>\r\n                            }\r\n                            {!isAuthenticated() &&\r\n                                <Link to='/signin'>\r\n\r\n                                    <button\r\n                                        className=\"block w-full bg-white hover:bg-gray-100 text-teal-500 border-2 border-teal-500 px-3 py-2 rounded uppercase font-poppins font-medium\">\r\n                                        Inicie sesión\r\n                                    </button>\r\n                                </Link>\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductoCard\r\n","D:\\React\\juju\\frontend\\src\\components\\Cards\\RecetaCard.js",["182"],"D:\\React\\juju\\frontend\\src\\core\\apiCore.js",[],"D:\\React\\juju\\frontend\\src\\components\\Cards\\CarritoCard.js",["183","184","185"],"import React, { useEffect, useState } from 'react'\r\nimport { API } from '../../config';\r\nimport { isAuthenticated, pullCarrito, readProducto } from '../../core/apiCore';\r\n\r\nfunction CarritoCard({ productoId, stateChanger }) {\r\n    const [producto, setProducto] = useState([]);\r\n    const [error, setError] = useState(false);\r\n    const [total, setTotal] = useState(0);\r\n\r\n    const { user, token } = isAuthenticated();\r\n\r\n    const loadProductos = () => {\r\n        readProducto(productoId.producto).then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                setProducto(data)\r\n\r\n            }\r\n        })\r\n    }\r\n    const setPTotal = () => {\r\n        // sumaTotal(total + (productoId.cantidad * producto.precio))\r\n        return total + (productoId.cantidad * producto.precio)\r\n    }\r\n    const borrarDeCarrito = () => {\r\n        pullCarrito(user._id, token, productoId._id).then(data => {\r\n            if (data.error) {\r\n                setError(data.error)\r\n            } else {\r\n                window.location.reload()\r\n            }\r\n        })\r\n\r\n    }\r\n    useEffect(() => {\r\n        loadProductos();\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"container flex items-center\">\r\n\r\n                <div className='container flex bg-black rounded-xl h-52 items-center w-screen'>\r\n                    <img\r\n                        className='rounded h-5/6 m-2'\r\n                        src={`${API}/producto/photo/${productoId.producto}`}\r\n                        alt={productoId.producto} />\r\n                    <div className=\"container\">\r\n                        <h1 className=\"text-xl font-poppins text-white\">Nombre:</h1>\r\n                        <h1 className=\"font-bold text-xl font-poppins text-white\">{producto.nombre}</h1>\r\n                    </div>\r\n                    <div className=\"container\" >\r\n                        <h1 className=\"text-xl font-poppins text-white\">Cantidad:</h1>\r\n                        <h1 className=\"font-bold text-xl font-poppins text-white\">X{productoId.cantidad}</h1>\r\n                    </div>\r\n                    <div className=\"container w-1/3 flex\" >\r\n                        <h1 className=\"font-bold text-xl font-poppins text-white\">Total: ${setPTotal()}</h1>\r\n                    </div>\r\n                    {stateChanger(setPTotal)}\r\n\r\n\r\n\r\n                </div >\r\n                <button onClick={borrarDeCarrito} >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-12 w-12 m-4 text-red-600\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM7 9a1 1 0 000 2h6a1 1 0 100-2H7z\" clipRule=\"evenodd\" />\r\n                    </svg>\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CarritoCard\r\n",{"ruleId":"186","severity":1,"message":"187","line":5,"column":8,"nodeType":"188","messageId":"189","endLine":5,"endColumn":11},{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"186","severity":1,"message":"194","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":25},{"ruleId":"186","severity":1,"message":"195","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"196","line":9,"column":8,"nodeType":"188","messageId":"189","endLine":9,"endColumn":16},{"ruleId":"186","severity":1,"message":"197","line":10,"column":12,"nodeType":"188","messageId":"189","endLine":10,"endColumn":17},{"ruleId":"186","severity":1,"message":"198","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":22},{"ruleId":"186","severity":1,"message":"199","line":5,"column":41,"nodeType":"188","messageId":"189","endLine":5,"endColumn":48},{"ruleId":"186","severity":1,"message":"200","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":18},{"ruleId":"186","severity":1,"message":"201","line":22,"column":30,"nodeType":"188","messageId":"189","endLine":22,"endColumn":37},{"ruleId":"186","severity":1,"message":"197","line":22,"column":39,"nodeType":"188","messageId":"189","endLine":22,"endColumn":44},{"ruleId":"186","severity":1,"message":"202","line":22,"column":46,"nodeType":"188","messageId":"189","endLine":22,"endColumn":64},{"ruleId":"186","severity":1,"message":"203","line":24,"column":13,"nodeType":"188","messageId":"189","endLine":24,"endColumn":17},{"ruleId":"186","severity":1,"message":"204","line":7,"column":27,"nodeType":"188","messageId":"189","endLine":7,"endColumn":38},{"ruleId":"186","severity":1,"message":"205","line":37,"column":9,"nodeType":"188","messageId":"189","endLine":37,"endColumn":14},{"ruleId":"186","severity":1,"message":"201","line":40,"column":9,"nodeType":"188","messageId":"189","endLine":40,"endColumn":16},{"ruleId":"186","severity":1,"message":"197","line":41,"column":9,"nodeType":"188","messageId":"189","endLine":41,"endColumn":14},{"ruleId":"186","severity":1,"message":"206","line":42,"column":9,"nodeType":"188","messageId":"189","endLine":42,"endColumn":23},{"ruleId":"207","severity":1,"message":"208","line":50,"column":8,"nodeType":"209","endLine":50,"endColumn":10,"suggestions":"210"},{"ruleId":"186","severity":1,"message":"211","line":3,"column":8,"nodeType":"188","messageId":"189","endLine":3,"endColumn":18},{"ruleId":"186","severity":1,"message":"197","line":12,"column":12,"nodeType":"188","messageId":"189","endLine":12,"endColumn":17},{"ruleId":"207","severity":1,"message":"208","line":37,"column":8,"nodeType":"209","endLine":37,"endColumn":10,"suggestions":"212"},{"ruleId":"186","severity":1,"message":"205","line":33,"column":9,"nodeType":"188","messageId":"189","endLine":33,"endColumn":14},{"ruleId":"186","severity":1,"message":"201","line":34,"column":9,"nodeType":"188","messageId":"189","endLine":34,"endColumn":16},{"ruleId":"186","severity":1,"message":"197","line":35,"column":9,"nodeType":"188","messageId":"189","endLine":35,"endColumn":14},{"ruleId":"186","severity":1,"message":"213","line":36,"column":9,"nodeType":"188","messageId":"189","endLine":36,"endColumn":21},{"ruleId":"207","severity":1,"message":"214","line":45,"column":8,"nodeType":"209","endLine":45,"endColumn":10,"suggestions":"215"},{"ruleId":"186","severity":1,"message":"197","line":12,"column":12,"nodeType":"188","messageId":"189","endLine":12,"endColumn":17},{"ruleId":"186","severity":1,"message":"216","line":15,"column":19,"nodeType":"188","messageId":"189","endLine":15,"endColumn":24},{"ruleId":"207","severity":1,"message":"217","line":32,"column":8,"nodeType":"209","endLine":32,"endColumn":15,"suggestions":"218"},{"ruleId":"219","severity":1,"message":"220","line":67,"column":28,"nodeType":"221","messageId":"222","endLine":67,"endColumn":30},{"ruleId":"186","severity":1,"message":"197","line":11,"column":12,"nodeType":"188","messageId":"189","endLine":11,"endColumn":17},{"ruleId":"186","severity":1,"message":"197","line":24,"column":9,"nodeType":"188","messageId":"189","endLine":24,"endColumn":14},{"ruleId":"186","severity":1,"message":"223","line":25,"column":9,"nodeType":"188","messageId":"189","endLine":25,"endColumn":16},{"ruleId":"224","severity":1,"message":"225","line":86,"column":21,"nodeType":"226","endLine":86,"endColumn":78},{"ruleId":"186","severity":1,"message":"197","line":16,"column":12,"nodeType":"188","messageId":"189","endLine":16,"endColumn":17},{"ruleId":"207","severity":1,"message":"227","line":45,"column":8,"nodeType":"209","endLine":45,"endColumn":15,"suggestions":"228"},{"ruleId":"186","severity":1,"message":"229","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":25},{"ruleId":"186","severity":1,"message":"197","line":12,"column":12,"nodeType":"188","messageId":"189","endLine":12,"endColumn":17},{"ruleId":"186","severity":1,"message":"230","line":10,"column":7,"nodeType":"188","messageId":"189","endLine":10,"endColumn":15},{"ruleId":"186","severity":1,"message":"231","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":18},{"ruleId":"186","severity":1,"message":"232","line":7,"column":8,"nodeType":"188","messageId":"189","endLine":7,"endColumn":12},{"ruleId":"186","severity":1,"message":"233","line":8,"column":8,"nodeType":"188","messageId":"189","endLine":8,"endColumn":12},{"ruleId":"186","severity":1,"message":"234","line":9,"column":8,"nodeType":"188","messageId":"189","endLine":9,"endColumn":12},{"ruleId":"186","severity":1,"message":"197","line":16,"column":12,"nodeType":"188","messageId":"189","endLine":16,"endColumn":17},{"ruleId":"207","severity":1,"message":"235","line":30,"column":8,"nodeType":"209","endLine":30,"endColumn":10,"suggestions":"236"},{"ruleId":"186","severity":1,"message":"195","line":1,"column":27,"nodeType":"188","messageId":"189","endLine":1,"endColumn":36},{"ruleId":"186","severity":1,"message":"237","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":14},{"ruleId":"186","severity":1,"message":"197","line":6,"column":12,"nodeType":"188","messageId":"189","endLine":6,"endColumn":17},{"ruleId":"186","severity":1,"message":"238","line":9,"column":22,"nodeType":"188","messageId":"189","endLine":9,"endColumn":33},{"ruleId":"186","severity":1,"message":"197","line":10,"column":12,"nodeType":"188","messageId":"189","endLine":10,"endColumn":17},{"ruleId":"186","severity":1,"message":"239","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":25},{"ruleId":"186","severity":1,"message":"197","line":7,"column":12,"nodeType":"188","messageId":"189","endLine":7,"endColumn":17},{"ruleId":"186","severity":1,"message":"240","line":8,"column":19,"nodeType":"188","messageId":"189","endLine":8,"endColumn":27},{"ruleId":"207","severity":1,"message":"241","line":39,"column":8,"nodeType":"209","endLine":39,"endColumn":10,"suggestions":"242"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["243"],"no-negated-in-lhs",["244"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'Dropdown' is defined but never used.","'error' is assigned a value but never used.","'authenticate' is defined but never used.","'signout' is defined but never used.","'Redirect' is defined but never used.","'loading' is assigned a value but never used.","'redirectToReferrer' is assigned a value but never used.","'user' is assigned a value but never used.","'nuevaReceta' is defined but never used.","'photo' is assigned a value but never used.","'productoCreado' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.","ArrayExpression",["245"],"'RecetaCard' is defined but never used.",["246"],"'recetaCreada' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'init' and 'values'. Either include them or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.",["247"],"'token' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'user._id'. Either include it or remove the dependency array.",["248"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'success' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect has a missing dependency: 'receta'. Either include it or remove the dependency array.",["249"],"'agregarACarrito' is defined but never used.","'isActive' is assigned a value but never used.","'Carousel' is defined but never used.","'car1' is defined but never used.","'car2' is defined but never used.","'car3' is defined but never used.","React Hook useEffect has a missing dependency: 'recetas'. Either include it or remove the dependency array.",["250"],"'Link' is defined but never used.","'setCantidad' is assigned a value but never used.","'isAuthenticated' is defined but never used.","'setTotal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadProductos'. Either include it or remove the dependency array.",["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"252","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},{"desc":"259","fix":"260"},{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [init]",{"range":"265","text":"266"},{"range":"267","text":"266"},"Update the dependencies array to be: [init, values]",{"range":"268","text":"269"},"Update the dependencies array to be: [props, user._id]",{"range":"270","text":"271"},"Update the dependencies array to be: [props, receta]",{"range":"272","text":"273"},"Update the dependencies array to be: [recetas]",{"range":"274","text":"275"},"Update the dependencies array to be: [loadProductos]",{"range":"276","text":"277"},[1051,1053],"[init]",[992,994],[1057,1059],"[init, values]",[883,890],"[props, user._id]",[1089,1096],"[props, receta]",[844,846],"[recetas]",[1183,1185],"[loadProductos]"]